name: Deploy frontend to GitHub Pages

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    env:
      MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
      MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
      MYSQL_USER: ${{ secrets.MYSQL_USER }}
      MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install PNPM
        run: npm install -g pnpm

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Start MySQL
        run: |
          docker compose -f database/docker-compose.yml up -d
          echo "Waiting for MySQL to be ready..."
          for i in {1..30}; do
            if docker exec mysql-server mysql -uroot -p"${MYSQL_ROOT_PASSWORD}" -e "SELECT 1;" > /dev/null 2>&1; then
              echo "MySQL is ready!"
              break
            fi
            sleep 2
          done

      - name: Inject env vars into SQL file
        run: |
          sudo apt-get update
          sudo apt-get install -y gettext
          envsubst < database/init.sql > database/rendered.sql
          ls -lh database/rendered.sql

      - name: Run SQL script inside MySQL container
        run: |
          docker cp database/rendered.sql mysql-server:/tmp/rendered.sql
          docker exec mysql-server bash -c "mysql -uroot -p${MYSQL_ROOT_PASSWORD} ${MYSQL_DATABASE} < /tmp/rendered.sql"

      - name: Build and run backend
        working-directory: backend
        run: |
          mvn clean package
          nohup mvn spring-boot:run &
          sleep 40
          curl --fail http://localhost:8080/api/tickets || echo "Backend not responding"

      - name: Build and start frontend
        working-directory: frontend
        run: |
          pnpm install
          pnpm run build
          nohup pnpm run preview -- --port 4173 &
          sleep 20
          curl --fail http://localhost:4173 || echo "Frontend not responding"

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: frontend/dist

      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: frontend/dist
